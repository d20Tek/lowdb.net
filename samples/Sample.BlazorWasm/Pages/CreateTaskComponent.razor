@inject TaskRepository _service;

<div class="col-12 border border-secondary p-1">
    <h3>New Task</h3>

    <EditForm Model="@_task" OnValidSubmit="CreateTask">
        <div class="mb-3">
            <label for="taskName" class="form-label">Name</label>
            <InputText id="taskName" class="form-control" required @bind-Value="_task.Name" placeholder="New task" />
        </div>

        <div class="form-check mb-3">
            <InputCheckbox id="isComplete" class="form-check-input" @bind-Value="_task.IsCompleted" />
            <label class="form-check-label" for="isComplete">Is Done?</label>
        </div>

        <button type="submit" class="btn btn-primary">Create</button>
    </EditForm>

@if (string.IsNullOrEmpty(_errorMessage))
{
    <div>@_errorMessage</div>
}
</div>

@code {
    private string _errorMessage = string.Empty;
    private TaskEntity _task = new TaskEntity();

    [Parameter]
    public EventCallback TasksUpdated { get; set; }

    private async Task CreateTask()
    {
        bool result = _service.CreateTask(_task.Name, _task.IsCompleted);
        if (result is false)
            _errorMessage = "Error: new task could not be created.";
        else
            await TasksUpdated.InvokeAsync();
    }
}
